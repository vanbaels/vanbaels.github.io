---
title: "Calculating the net charge of a peptide"
author: "Sven Van Bael"
date: 2024/07/27
format: 
  html:
    number-sections: true
    df-print: kable
    toc: true
editor: visual
csl: apa.csl
bibliography: references.bib
---

This post describes a workflow for calculating the charge of a peptide from its amino acid composition. I start first with a quite extensive introduction on the origin of the formulas that are used. If you want to see the `R` code directly, go to @sec-writing-the-r-function.

## Packages used

```{r}
#| collapse: true
#| warning: false

library(tidyverse) 
library(DT)
```

## Introduction

A lot of my academic work involved peptides, which are in essence short proteins that are typically around 5 to 20 amino acids long. A major part of my (post)doctoral project was using mass spectrometry to identify and quantify peptides in biological samples. A fundamental principle of mass spectrometry is that it measures the mass-to-charge ratios (m/z) of everything it was able to measure in a sample. Consequently, for quantification purposes I need to input the mass-to-charge ratios of my peptides of interest into the machine. While calculating the monoisotopic mass of a peptide is straightforward (summing the individual amino acid masses that make up the peptide), calculating the charge at a certain pH is slightly less trivial.

The method described below is based on two publications by @moore1985 and @cameselle1986.

### Identifying all ionizable groups within a peptide {#sec-ion_groups}

Contributing to the overall charge of a peptide are: the **N-terminus** (amino group), the **C-terminus** (carboxyl group), and the amino acids that have ionisable side chains: **lysine** (amino group), **arginine** (guanidino group), **histidine** (imidazole), **glutamic acid** (carboxyl group), **aspartic acid** (carboxyl group), **cysteine** (sulfhydryl) and **tyrosine** (phenol group). For amino acids, these can be divided into two types:

1.  Groups that have no charge at low pH and become negatively charged at high pH: carboxyl (COOH/COO^-^), sulfhydryl (SH/S^-^), and phenol (PhOH/PhO^-^).
2.  Groups that are positively charged at low pH and become neutral at high pH: amino (NH~3~^+^/NH~3~), guanidino (guanidino^+^/guanidino), and imidazole (imidazole^+^/imidazole).

If the charge of each of the aforementioned groups is known, the charge $Z$ of a peptide at a given pH can simply be calculated by summing all the individual charges:

$$
\begin{align*}
Z_{peptide} = Z_{N-term} &+ Z_{C-term}
\\
& + n\cdot Z_{Lys}
\\
& + n\cdot Z_{Arg}
\\
& + n\cdot Z_{His}
\\
& + n\cdot Z_{Glu}
\\
& + n\cdot Z_{Asp}
\\
& + n\cdot Z_{Cys}
\\
& + n\cdot Z_{Tyr}
\end{align*}
$$ {#eq-simple_Z}

Where $n$ is the number of each corresponding amino acid present in the peptide. The question now is: how to calculate the charge $Z$ for each element in question?

### Calculating the fraction of charged/neutral molecules

The Henderson-Hasselbalch equation states that the pH of a solution can be calculated from the acid dissociation constant ($pK_a$)and the concentration of dissociated ($A^-$) and undissociated ($HA$) molecules.

$$
pH = pK_a + log \frac{[A^-]}{[HA]}
$$ {#eq-Hen_Has}

Which can be rewritten as:

$$
10^{pH-pK_a}=\frac{[A^-]}{[HA]}
$$ {#eq-Hen_Has_rearr}

If you express the total number of molecules in solution as 100%, this means that $[A^-]+[HA]=1$ or, when rewritten: $[HA]=1-[A^-]$. Plugging this into @eq-Hen_Has_rearr results in:

$$
10^{pH-pK_a} = \frac{[A^-]}{1-[A^-]}
$$ {#eq-diss_Hen_Has}

Rearranging for $[A^-]$ gives:

$$
[A^-] = \frac{1}{10^{pK_a-pH} + 1}
$$ {#eq-diss}

And since it was earlier established that $[HA] = 1 - [A^-]$:

$$
\begin{align*}
[HA] &= 1 - \frac{1}{10^{pK_a-pH}+1}
\\
[HA] &= \frac{1}{10^{pH-pK_a}+1}
\end{align*}
$$ {#eq-undiss}

### Using the $[A^-]$ and $[HA]$ fractions to calculate overall charge

In @sec-ion_groups, the distinction was made between the ionizable groups within a peptide that have a **negative charge (-1) when dissociated** versus those that have a **positive charge (+1) when undissociated**. Using the formulas derived from the Henderson-Hasselbalch equation, each fraction can now be calculated.

Let's take the C-terminus as an example: the $pK_a$ of an amino acid carboxyl group is \~3.5, and has a negative charge when dissociated, so the formula for $[A^-]$ is used to calculate the fraction of dissociated molecules. With a pH of 7 as example, this gives:

$$
\begin{align*}
[A^-] &= \frac{1}{10^{pK_a-pH}+1}
\\
&= \frac{1}{10^{3.5-7}+1}
\\
&= 99.9\%
\end{align*}
$$ {#eq-example_diss}

So 99.9% of the time, the carboxyl group is in the dissociated form (COO^-^) at pH = 7. Since the charge of a dissociated carboxyl group equals -1, the mean charge $Z_{C-term}$ is $0.999 \times -1 = -0.999$ at pH = 7. Note that the 0.01% that is in the undissociated COOH form is not ionized, and therefore does not contribute to the overall charge.

The same principle can be applied to the N-terminus, but as this group only carries a charge when undissociated, the formula for $[HA]$ is used:

$$
\begin{align*}
[HA] &= \frac{1}{10^{pH-pK_a}+1}
\\
&= \frac{1}{10^{7-7.5} + 1}
\\
&= 76\%
\end{align*}
$$ {#eq-example_undiss}

With 76% of the molecules in the positively charged nondissociated form (NH~3~^+^), the mean charge $Z_{N-term}$ equals $0.76 \times (+1) = 0.76$ at pH = 7. Again, the 24% that are in the dissociated NH~2~ form do not carry a charge, and therefore do not contribute.

Calculating the charges carried by the amino acid side chains is analogous. For this example, the peptide has no amino acids with ionizable side chains, so @eq-simple_Z can be simplified to calculate the overall charge of the peptide at pH = 7:

$$
\begin{align*}
Z_{peptide} &= Z_{N-term} + Z_{C-term}
\\
&= 0.76 + (-0.999)
\\
&= -0.239
\end{align*}
$$ {#eq-example_pep_Z}

Since the outcomes of @eq-example_diss and [-@eq-example_undiss] still needed to be multiplied by the value 1 or -1 for positively or negatively charged ions, @eq-diss and [-@eq-undiss] can be generalized as:

$$
\begin{align*}
Z^- &= \frac{-1}{10^{pK_a-pH}+1}
\\
Z^+ &= \frac{+1}{10^{pH-pK_a}+1}
\end{align*}
$$ {#eq-general_charges}

### The pK~a~ values of the termini and amino acid side chains

There are different sources available for the pK~a~ values of N- and C-termini of amino acids and their side chains. From experience, the resource provided by @bjellqvist1993 has given the best results, with predicted charge states that correspond well with my own empirically obtained data.

```{r}
#| collapse: true
#| warning: false
#| label: tbl-Bjellqvist_pKa
#| tbl-cap: 'Bjellqvist pK~a~ values for termini and side chains of all 20 amino acids.'

df_bjellqvist <- read_csv("pK values - Bjellqvist.csv")
df_bjellqvist <- column_to_rownames(df_bjellqvist, var = "Single-letter code")
datatable(df_bjellqvist)
```

------------------------------------------------------------------------

## Creating the `R` function {#sec-writing-the-r-function}

Using the formulas in [-@eq-general_charges] and the pK~a~ information from Bjellqvist, I created the function `computeCharge` that calculates the net charge of a peptide at a given pH.

```{r}
#| collapse: true
#| warning: false

computeCharge <- function(Peptide, pH){
  #Get amino acid composition from peptide
  pept <- unlist(str_split(Peptide, ""))
  if (sum(!pept %in% rownames(df_bjellqvist)) > 0){
    #Abort function when the Peptide string contains letters that do not correspond with an amino acid.
    warning("Peptide string contains unknown amino acid character(s). Please check.")
  } else {
    compoAA <- pept %>%
    factor(., levels = LETTERS) %>%
    table()
  
    #Get the N-terminal and C-terminal amino acid
    nTermAA <- pept[1]
    cTermAA <- pept[length(pept)]
  
    #Calculate charge for N- and C-termini and amino acid residues with the pKa information from df_bjellqvist
    cter <- -1/(10^(df_bjellqvist[cTermAA, "pK1"] - pH) + 1)
    nter <- 1/(10^(pH - df_bjellqvist[nTermAA, "pK2"]) + 1)
  
    carg <- as.vector(compoAA['R'] * (1/(10^(pH - df_bjellqvist["R", "pKr"]) + 1)))
    chis <- as.vector(compoAA['H'] * (1/(10^(pH - df_bjellqvist["H", "pKr"]) + 1)))
    clys <- as.vector(compoAA['K'] * (1/(10^(pH - df_bjellqvist["K", "pKr"]) + 1)))
  
    casp <- as.vector(compoAA['D'] * (-1/(10^(df_bjellqvist['D', "pKr"] - pH) + 1)))
    cglu <- as.vector(compoAA['E'] * (-1/(10^(df_bjellqvist['E', "pKr"] - pH) + 1)))
    ccys <- as.vector(compoAA['C'] * (-1/(10^(df_bjellqvist['C', "pKr"] - pH) + 1)))
    ctyr <- as.vector(compoAA['Y'] * (-1/(10^(df_bjellqvist['Y', "pKr"] - pH) + 1)))
  
    charge <- cter + casp + cglu + ccys + ctyr + nter + carg + chis + clys
    return(charge)
  }
}
```

Let's test the function using the peptide sequence DGLDAASYYAPVR, which is part of a standard for retention time calibration [@escher2012]. Typically, samples for mass spectrometric analyses are dissolved in a highly acidic buffer containing 0.1% formic acid, which has a pH of \~2.7, so this value will be used as input.

```{r}
#| collapse: true
#| warning: false

computeCharge("DGLDAASYYAPVR", 2.7)
```

The value of `r computeCharge("DGLDAASYYAPVR", 2.7) %>% round(., 2)` can be interpreted that there both are molecules with charge +1 and charge +2 present, but since the calculated charge is closer to +2, the vast majority will be doubly charged. If necessary, the ratio $f$ of doubly charged molecules can be calculated as follows:

$$
\begin{align*}
f \times (+2) + (1-f) \times (+1) &= 1.79
\\
2f - f + 1 &= 1.79
\\
f &= 0.79
\end{align*}
$$

Hence, 79% of the molecules are doubly charged while 21% (1 - 0.79 = 0.21) are singly charged.

In a second example, let's test the peptide ECCHGDLLECADDR, which originates from the bovine serum albumin protein (BSA).

```{r}
#| collapse: true
#| warning: false

computeCharge("ECCHGDLLECADDR", 2.7)
```

Again, the majority of this peptide will be triply charged. The exact ratios can be calculated as before, but now for +2 and +3 charges:

$$
\begin{align*}
f \times (+3) + (1 - f) \times (+2) &= 2.71
\\
3f+2-2f &= 2.71
\\
f &= 0.71
\end{align*}
$$

So 71% of this peptide occurs as triply charged, with 29% being doubly charged.

## Creating a charge profile along the pH scale

In some situations, it can be interesting to see how the charge of a peptide changes over the pH range. For this purpose, I used my `computeCharge` function to plot a charge profile. As an example peptide, I used EAVSEILETSR, a peptide tag described by @vandemoortele2016.

```{r}
#| collapse: true
#| warning: false
#| fig-asp: 1
#| label: fig-EAV_profile
#| fig-cap: 'Charge profile of EAVSEILETSR along the pH scale'

#Define example peptide
pept_1 <- "EAVSEILETSR"

#Iterate the computeCharge function over the entire pH scale
df_pH <- tibble("pH" = seq(0, 14, 0.2),
                "Charge" = sapply(pH, computeCharge, Peptide = pept_1))

#Set maximum of the charge axis
y_scale <- max(abs(df_pH$Charge)) %>% ceiling()

#Plot
ggplot(df_pH) +
  geom_hline(yintercept = 0, color = "#565253", lty = 2) +
  geom_vline(xintercept = 7, color = "#565253", lty = 2) +
  geom_line(aes(x = pH, y = Charge), color = "#033e57") +
  scale_x_continuous(limits = c(0, 14), breaks = seq(0, 14, 1)) +
  scale_y_continuous(limits = c(-y_scale, y_scale), breaks = seq(-y_scale, y_scale, 1)) +
  labs(title = pept_1) +
  theme_classic() +
  theme(axis.text = element_text(size = 16, color = "black"),
        axis.title = element_text(size = 18, face = "bold"),
        plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
```
