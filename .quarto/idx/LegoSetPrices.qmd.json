{"title":"Lego set prices","markdown":{"yaml":{"title":"Lego set prices","author":"**Sven Van Bael**","format":{"html":{"number-sections":true,"df-print":"paged","toc":true}},"editor":"visual"},"headingText":"Packages used","containsRefs":false,"markdown":"\n\n*Almost everyone is familiar with Lego, the popular construction toy with interlocking brightly coloured plastic bricks. In the last two decades, the Lego marketing has not only focused on children, but also on adults, with more intricate and detailed sets becoming available. Everyone who has a Lego fan at home (be it a child or an adult) will know of the sometimes hefty price ranges, especially for sets that are under an intellectual property license (think of Star Wars, Marvel, Minecraft, etc.).*\n\n*Thanks to the `R` package [`brickset`](https://github.com/jbryer/brickset) I was able to collect data on all Lego sets released during a certain year, containing statistics such as the theme, intellectual property license, number of pieces, retail price, etc. Exploring this dataset I was curious if I could find an answer to the following questions:*\n\n-   *Are smaller sets more expensive to produce than bigger ones, i.e. is there a difference in price per piece count?*\n\n-   *Is there a big difference between intellectual property licensed sets and those that are not?*\n\n-   *Which intellectual property has the most expensive Lego sets?*\n\n-   *Which set has the cheapest price per piece?*\n\n\n```{r}\n#| collapse: true\n#| warning: false\nlibrary(brickset)\nlibrary(tidyverse)\n```\n\n## Obtaining data on all Lego sets released from 2018 to 2024\n\nThe `getSets` function from the `brickset` package interfaces with the API on the [Brickset](https://brickset.com/) website (an active account is required) and returns a data frame containing all Lego sets released for a specified year. Initially, I was planning to create a database with all sets released in the last 5 years (i.e. 2019-2024), however, since I was hesitant of potential COVID-19 related effects (production lags, delayed set releases, ...), I instead opted for the 2018-2024 period (July 2024 at the time of writing) to have a good amount of pre- and post-COVID-19 data. The combined data frame is available as `Lego_sets_18to24.csv`\n\n```{r}\n#| collapse: true\n#| warning: false\ndf_sets_18to24 <- read_csv(\"Lego_sets_18to24.csv\")\nglimpse(df_sets_18to24)\n```\n\n## Cleaning the dataset\n\nYou can see that the dataframe has a total of `r ncol(df_sets_18to24)` columns with an abundance of information that I'm not interested in for this analysis. So to make life a little easier, I will only select the columns `setID`, `number`, `name`, `year`, `theme`, `themeGroup`, `subtheme`, `category`, `released`, `pieces`, and `DE_retailPrice` (as I'm in the European Union, I opted for prices in Euro).\n\n```{r}\n#| collapse: true\n#| warning: false\n#| label: tbl-sets_18to24\n#| tbl-cap: First 5 columns of `sets_18to24`\n\ndf_sets_18to24 <- read_csv(\"Lego_sets_18to24.csv\") %>%\n  select(setID, number, name, year, theme, themeGroup, subtheme, category, released, pieces, DE_retailPrice)\nhead(df_sets_18to24, n = 5)\n```\n\nTo make things easier later on, any NAs in `subtheme` are filled in by the value of the column `themeGroup`:\n\n```{r}\ndf_sets_18to24$subtheme <- ifelse(is.na(df_sets_18to24$subtheme) == T,\n                                  df_sets_18to24$themeGroup,\n                                  df_sets_18to24$subtheme)\n```\n\nWhile exploring the data further, it seems that the intelectual property license information is spread over the columns `themeGroup` or `subtheme`, with no overlap between the two. As I want to be able to make an easy distinction between licensed and not-licensed, the new column `License` is created which contains this information. Additionally, the following filters are applied:\n\n-   `pieces` cannot be NA, and is cut-off at 10, because these very small sets are often expansion sets such as base plates, road plates, rails, etc.\n\n-   `DE_retailPrice` cannot be NA.\n\n-   As I only focus on actual Lego sets, `theme` cannot be \"Duplo\", and `category` cannot be \"Book\".\n\n-   `released` equals TRUE.\n\nAnd finally, the column `Price-to-part ratio` is added, which is simply `DE_retalPrice` divided by `pieces`.\n\n```{r}\n#| collapse: true\n#| label: tbl-sets_18to24_filt\n#| tbl-cap: First 5 columns of `sets_18to24_filt`\n\ndf_sets_18to24_filt <- df_sets_18to24 %>%\n  filter(is.na(pieces) == FALSE,\n         pieces > 10,\n         is.na(DE_retailPrice) == FALSE,\n         theme != \"Duplo\",\n         category != \"Book\",\n         released == TRUE\n         ) %>%\n  mutate(\"License\" = ifelse(themeGroup == \"Licensed\"|subtheme == \"Licensed\",\n                            \"Licensed\",\n                            \"No license\"),\n         \"Price-to-part ratio\" = round(DE_retailPrice/pieces, 2))\n\nhead(df_sets_18to24_filt, n = 5)\n```\n\n```{r}\ndf_sets_18to24_filt$year <- factor(df_sets_18to24_filt$year)\n```\n\n## Visually exploring the data\n\n### Number of sets released each year\n\n```{r}\ndf_release_yr <- df_sets_18to24_filt %>%\n  group_by(year) %>%\n  summarise(\"n_sets\" = n())\n\nggplot(df_release_yr) +\n  geom_line(aes(x = year, y = n_sets)) +\n  coord_cartesian(ylim = c(0, 390))\n```\n\n```{r}\nggplot(df_sets_18to24_filt) +\n  geom_boxplot(aes(x = year, y = pieces)) +\n  scale_y_continuous(trans = \"log10\")\n\nggplot(df_sets_18to24_filt) +\n  geom_boxplot(aes(x = year, y = DE_retailPrice)) +\n    scale_y_continuous(trans = \"log10\")\n\nggplot(df_sets_18to24_filt) +\n  geom_point(aes(x = pieces, y = DE_retailPrice, color = License)) +\n  geom_smooth(aes(x = pieces, y = DE_retailPrice), formula = y ~ x - 1, method = \"lm\") +\n  geom_smooth(aes(x = pieces, y = DE_retailPrice, color = License), formula = y ~ x - 1, method = \"lm\")\n\n\nlm(DE_retailPrice ~ pieces - 1, data = df_sets_18to24_filt) %>% summary()\n\n```\n","srcMarkdownNoYaml":"\n\n*Almost everyone is familiar with Lego, the popular construction toy with interlocking brightly coloured plastic bricks. In the last two decades, the Lego marketing has not only focused on children, but also on adults, with more intricate and detailed sets becoming available. Everyone who has a Lego fan at home (be it a child or an adult) will know of the sometimes hefty price ranges, especially for sets that are under an intellectual property license (think of Star Wars, Marvel, Minecraft, etc.).*\n\n*Thanks to the `R` package [`brickset`](https://github.com/jbryer/brickset) I was able to collect data on all Lego sets released during a certain year, containing statistics such as the theme, intellectual property license, number of pieces, retail price, etc. Exploring this dataset I was curious if I could find an answer to the following questions:*\n\n-   *Are smaller sets more expensive to produce than bigger ones, i.e. is there a difference in price per piece count?*\n\n-   *Is there a big difference between intellectual property licensed sets and those that are not?*\n\n-   *Which intellectual property has the most expensive Lego sets?*\n\n-   *Which set has the cheapest price per piece?*\n\n## Packages used\n\n```{r}\n#| collapse: true\n#| warning: false\nlibrary(brickset)\nlibrary(tidyverse)\n```\n\n## Obtaining data on all Lego sets released from 2018 to 2024\n\nThe `getSets` function from the `brickset` package interfaces with the API on the [Brickset](https://brickset.com/) website (an active account is required) and returns a data frame containing all Lego sets released for a specified year. Initially, I was planning to create a database with all sets released in the last 5 years (i.e. 2019-2024), however, since I was hesitant of potential COVID-19 related effects (production lags, delayed set releases, ...), I instead opted for the 2018-2024 period (July 2024 at the time of writing) to have a good amount of pre- and post-COVID-19 data. The combined data frame is available as `Lego_sets_18to24.csv`\n\n```{r}\n#| collapse: true\n#| warning: false\ndf_sets_18to24 <- read_csv(\"Lego_sets_18to24.csv\")\nglimpse(df_sets_18to24)\n```\n\n## Cleaning the dataset\n\nYou can see that the dataframe has a total of `r ncol(df_sets_18to24)` columns with an abundance of information that I'm not interested in for this analysis. So to make life a little easier, I will only select the columns `setID`, `number`, `name`, `year`, `theme`, `themeGroup`, `subtheme`, `category`, `released`, `pieces`, and `DE_retailPrice` (as I'm in the European Union, I opted for prices in Euro).\n\n```{r}\n#| collapse: true\n#| warning: false\n#| label: tbl-sets_18to24\n#| tbl-cap: First 5 columns of `sets_18to24`\n\ndf_sets_18to24 <- read_csv(\"Lego_sets_18to24.csv\") %>%\n  select(setID, number, name, year, theme, themeGroup, subtheme, category, released, pieces, DE_retailPrice)\nhead(df_sets_18to24, n = 5)\n```\n\nTo make things easier later on, any NAs in `subtheme` are filled in by the value of the column `themeGroup`:\n\n```{r}\ndf_sets_18to24$subtheme <- ifelse(is.na(df_sets_18to24$subtheme) == T,\n                                  df_sets_18to24$themeGroup,\n                                  df_sets_18to24$subtheme)\n```\n\nWhile exploring the data further, it seems that the intelectual property license information is spread over the columns `themeGroup` or `subtheme`, with no overlap between the two. As I want to be able to make an easy distinction between licensed and not-licensed, the new column `License` is created which contains this information. Additionally, the following filters are applied:\n\n-   `pieces` cannot be NA, and is cut-off at 10, because these very small sets are often expansion sets such as base plates, road plates, rails, etc.\n\n-   `DE_retailPrice` cannot be NA.\n\n-   As I only focus on actual Lego sets, `theme` cannot be \"Duplo\", and `category` cannot be \"Book\".\n\n-   `released` equals TRUE.\n\nAnd finally, the column `Price-to-part ratio` is added, which is simply `DE_retalPrice` divided by `pieces`.\n\n```{r}\n#| collapse: true\n#| label: tbl-sets_18to24_filt\n#| tbl-cap: First 5 columns of `sets_18to24_filt`\n\ndf_sets_18to24_filt <- df_sets_18to24 %>%\n  filter(is.na(pieces) == FALSE,\n         pieces > 10,\n         is.na(DE_retailPrice) == FALSE,\n         theme != \"Duplo\",\n         category != \"Book\",\n         released == TRUE\n         ) %>%\n  mutate(\"License\" = ifelse(themeGroup == \"Licensed\"|subtheme == \"Licensed\",\n                            \"Licensed\",\n                            \"No license\"),\n         \"Price-to-part ratio\" = round(DE_retailPrice/pieces, 2))\n\nhead(df_sets_18to24_filt, n = 5)\n```\n\n```{r}\ndf_sets_18to24_filt$year <- factor(df_sets_18to24_filt$year)\n```\n\n## Visually exploring the data\n\n### Number of sets released each year\n\n```{r}\ndf_release_yr <- df_sets_18to24_filt %>%\n  group_by(year) %>%\n  summarise(\"n_sets\" = n())\n\nggplot(df_release_yr) +\n  geom_line(aes(x = year, y = n_sets)) +\n  coord_cartesian(ylim = c(0, 390))\n```\n\n```{r}\nggplot(df_sets_18to24_filt) +\n  geom_boxplot(aes(x = year, y = pieces)) +\n  scale_y_continuous(trans = \"log10\")\n\nggplot(df_sets_18to24_filt) +\n  geom_boxplot(aes(x = year, y = DE_retailPrice)) +\n    scale_y_continuous(trans = \"log10\")\n\nggplot(df_sets_18to24_filt) +\n  geom_point(aes(x = pieces, y = DE_retailPrice, color = License)) +\n  geom_smooth(aes(x = pieces, y = DE_retailPrice), formula = y ~ x - 1, method = \"lm\") +\n  geom_smooth(aes(x = pieces, y = DE_retailPrice, color = License), formula = y ~ x - 1, method = \"lm\")\n\n\nlm(DE_retailPrice ~ pieces - 1, data = df_sets_18to24_filt) %>% summary()\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"number-sections":true,"output-file":"LegoSetPrices.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.54","editor":"visual","theme":"cosmo","title":"Lego set prices","author":"**Sven Van Bael**"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}