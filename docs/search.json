[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sven Van Bael",
    "section": "",
    "text": "ORCID\n  \n  \n    \n     Github\n  \n\n  \n  \nExperienced researcher with an interest in analytical techniques and data science.\n\n\nPost-doctoral researcher | University of Antwerp  Centre for Proteomics  Nov. 2020 - Oct. 2023\nPost-doctoral researcher | KU Leuven  Research group of Molecular and Functional Neurobiology  Jan. 2019 - Oct. 2023\nPhD researcher | KU Leuven  Research group of Functional Genomics and Proteomics  Oct. 2014 - Dec. 2018"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Sven Van Bael",
    "section": "",
    "text": "Post-doctoral researcher | University of Antwerp  Centre for Proteomics  Nov. 2020 - Oct. 2023\nPost-doctoral researcher | KU Leuven  Research group of Molecular and Functional Neurobiology  Jan. 2019 - Oct. 2023\nPhD researcher | KU Leuven  Research group of Functional Genomics and Proteomics  Oct. 2014 - Dec. 2018"
  },
  {
    "objectID": "data_science_experience/posts/LegoSetPrices.html",
    "href": "data_science_experience/posts/LegoSetPrices.html",
    "title": "Lego set prices",
    "section": "",
    "text": "Almost everyone is familiar with Lego, the popular construction toy with interlocking brightly coloured plastic bricks. In the last two decades, the Lego marketing has not only focused on children, but also on adults, with more intricate and detailed sets becoming available. Everyone who has a Lego fan at home (be it a child, an adult, or both) will know the sometimes hefty price ranges, especially for sets that are under an intellectual property license (think of Star Wars, Marvel, Minecraft, etc.).\nThanks to the R package brickset I was able to collect data on all Lego sets released during 2018 and 2024, including statistics such as set theme, intellectual property license, number of pieces, retail price, etc. While exploring this data set I was curious if I could find an answer to some questions:"
  },
  {
    "objectID": "data_science_experience/posts/LegoSetPrices.html#packages-used",
    "href": "data_science_experience/posts/LegoSetPrices.html#packages-used",
    "title": "Lego set prices",
    "section": "1 Packages used",
    "text": "1 Packages used\n\nlibrary(brickset)\nlibrary(tidyverse)\nlibrary(ggbeeswarm)"
  },
  {
    "objectID": "data_science_experience/posts/LegoSetPrices.html#obtaining-data-on-all-lego-sets-released-from-2018-to-2024",
    "href": "data_science_experience/posts/LegoSetPrices.html#obtaining-data-on-all-lego-sets-released-from-2018-to-2024",
    "title": "Lego set prices",
    "section": "2 Obtaining data on all Lego sets released from 2018 to 2024",
    "text": "2 Obtaining data on all Lego sets released from 2018 to 2024\nThe getSets function from the brickset package interfaces with the API on the Brickset website (an active account is required) and returns a data frame containing all Lego sets released for a specified year. Initially, I was planning to create a database with all sets released in the last 5 years (i.e. 2019-2024). However, I was hesitant of potential COVID-19 related effects (production lags, delayed set releases, …), so I instead opted for the 2018-2024 period (July 2024 at the time of writing) to have a good amount of pre- and post-COVID-19 data. The combined data frame is available as Lego_sets_18to24.csv\n\ndf_sets_18to24 &lt;- read_csv(\"Lego_sets_18to24.csv\")\nglimpse(df_sets_18to24)\n## Rows: 6,085\n## Columns: 36\n## $ setID                 &lt;dbl&gt; 27724, 27828, 27829, 27830, 28316, 27454, 27455,…\n## $ number                &lt;chr&gt; \"10260\", \"10261\", \"10262\", \"10263\", \"10268\", \"10…\n## $ numberVariant         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n## $ name                  &lt;chr&gt; \"Downtown Diner\", \"Roller Coaster\", \"James Bond …\n## $ year                  &lt;dbl&gt; 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, …\n## $ theme                 &lt;chr&gt; \"Creator Expert\", \"Creator Expert\", \"Creator Exp…\n## $ themeGroup            &lt;chr&gt; \"Model making\", \"Model making\", \"Model making\", …\n## $ subtheme              &lt;chr&gt; \"Modular Buildings Collection\", \"Fairground Coll…\n## $ category              &lt;chr&gt; \"Normal\", \"Normal\", \"Normal\", \"Normal\", \"Normal\"…\n## $ released              &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n## $ pieces                &lt;dbl&gt; 2480, 4124, 1290, 1166, 826, 85, 186, 295, 579, …\n## $ minifigs              &lt;dbl&gt; 6, 11, NA, 8, 3, NA, 1, 2, 2, 3, NA, NA, NA, NA,…\n## $ bricksetURL           &lt;chr&gt; \"https://brickset.com/sets/10260-1\", \"https://br…\n## $ rating                &lt;dbl&gt; 4.3, 4.3, 4.2, 3.9, 4.0, 3.7, 3.9, 3.8, 4.0, 4.1…\n## $ reviewCount           &lt;dbl&gt; 7, 5, 10, 1, 3, 3, 2, 0, 2, 2, 1, 1, 2, 1, 1, 0,…\n## $ packagingType         &lt;chr&gt; \"Box\", \"Box\", \"Box\", \"Box\", \"Box\", \"Box\", \"Box\",…\n## $ availability          &lt;chr&gt; \"LEGO exclusive\", \"LEGO exclusive\", \"LEGO exclus…\n## $ agerange_min          &lt;dbl&gt; 16, 16, NA, 12, 12, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4…\n## $ thumbnailURL          &lt;chr&gt; \"https://images.brickset.com/sets/small/10260-1.…\n## $ imageURL              &lt;chr&gt; \"https://images.brickset.com/sets/images/10260-1…\n## $ US_retailPrice        &lt;dbl&gt; 169.99, 379.99, 149.99, 99.99, 199.99, 4.99, 9.9…\n## $ US_dateFirstAvailable &lt;dttm&gt; 2018-01-01, 2018-06-02, 2018-08-01, 2018-10-02,…\n## $ US_dateLastAvailable  &lt;dttm&gt; 2020-11-24, 2021-11-20, 2022-01-27, 2020-11-20,…\n## $ UK_retailPrice        &lt;dbl&gt; 129.99, 299.99, 129.99, 84.99, 159.99, 4.99, 8.9…\n## $ UK_dateFirstAvailable &lt;dttm&gt; 2018-01-01, 2018-06-02, 2018-08-01, 2018-10-02,…\n## $ UK_dateLastAvailable  &lt;dttm&gt; 2020-11-04, 2021-11-07, 2021-08-02, 2021-03-02,…\n## $ CA_retailPrice        &lt;dbl&gt; 219.99, 479.99, 179.99, 129.99, 249.99, 5.99, 12…\n## $ CA_dateFirstAvailable &lt;dttm&gt; 2018-01-01, 2018-06-02, 2018-08-01, 2018-10-02,…\n## $ CA_dateLastAvailable  &lt;dttm&gt; 2020-11-24, 2021-11-20, 2022-01-27, 2020-11-20,…\n## $ DE_retailPrice        &lt;dbl&gt; 149.99, 329.99, 149.99, 87.72, 175.45, 4.99, 9.9…\n## $ DE_dateFirstAvailable &lt;dttm&gt; 2018-02-02, 2018-06-02, 2018-08-01, 2018-10-02,…\n## $ DE_dateLastAvailable  &lt;dttm&gt; 2020-11-05, 2021-11-15, 2021-08-04, 2020-12-11,…\n## $ height                &lt;dbl&gt; 37.5, 48.6, 28.2, 28.0, 47.5, 9.1, 14.1, 19.1, 2…\n## $ width                 &lt;dbl&gt; 58.0, 58.1, 48.0, 47.7, 37.5, 12.2, 15.7, 26.2, …\n## $ depth                 &lt;dbl&gt; 9.80, 18.60, 9.10, 8.70, 10.70, 5.90, 6.10, 4.60…\n## $ weight                &lt;dbl&gt; NA, 5.800, NA, 1.365, 2.156, NA, NA, NA, NA, NA,…"
  },
  {
    "objectID": "data_science_experience/posts/LegoSetPrices.html#cleaning-the-dataset",
    "href": "data_science_experience/posts/LegoSetPrices.html#cleaning-the-dataset",
    "title": "Lego set prices",
    "section": "3 Cleaning the dataset",
    "text": "3 Cleaning the dataset\nYou can see that the dataframe has a total of 36 columns with an abundance of information that I’m not interested in for this analysis. So to make life a little easier, I will only select the columns setID, number, name, year, theme, themeGroup, subtheme, category, released, pieces, and DE_retailPrice (as I’m located in Europe, I opted for prices in Euro).\n\ndf_sets_18to24 &lt;- read_csv(\"Lego_sets_18to24.csv\") %&gt;%\n  select(setID, number, name, year, theme, themeGroup, subtheme, category, released, pieces, DE_retailPrice)\nhead(df_sets_18to24, n = 5)\n\n\n\nTable 1: First 5 rows of sets_18to24.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsetID\nnumber\nname\nyear\ntheme\nthemeGroup\nsubtheme\ncategory\nreleased\npieces\nDE_retailPrice\n\n\n\n\n27724\n10260\nDowntown Diner\n2018\nCreator Expert\nModel making\nModular Buildings Collection\nNormal\nTRUE\n2480\n149.99\n\n\n27828\n10261\nRoller Coaster\n2018\nCreator Expert\nModel making\nFairground Collection\nNormal\nTRUE\n4124\n329.99\n\n\n27829\n10262\nJames Bond Aston Martin DB5\n2018\nCreator Expert\nModel making\nVehicles\nNormal\nTRUE\n1290\n149.99\n\n\n27830\n10263\nWinter Village Fire Station\n2018\nCreator Expert\nModel making\nWinter Village Collection\nNormal\nTRUE\n1166\n87.72\n\n\n28316\n10268\nVestas Wind Turbine\n2018\nCreator Expert\nModel making\nVestas\nNormal\nTRUE\n826\n175.45\n\n\n\n\n\n\n\n\n\nTo make things easier later on, any NAs in subtheme are filled in by the value of the column themeGroup:\n\ndf_sets_18to24$subtheme &lt;- ifelse(is.na(df_sets_18to24$subtheme) == T,\n                                  df_sets_18to24$themeGroup,\n                                  df_sets_18to24$subtheme)\n\nWhile exploring the data further, it seems that the information on intellectual property license is spread over the columns themeGroup or subtheme, with no overlap between the two. As I want to be able to make an easy distinction between licensed and not-licensed, the new column License is created which contains this information. Additionally, the following filters are applied on the data frame:\n\npieces cannot be NA, and is cut-off at 10, because these very small sets are often expansion sets such as base plates, road plates, rails, etc.\nDE_retailPrice cannot be NA.\nAs I only focus on actual Lego sets, theme and subtheme cannot be “Duplo”, and category cannot be “Book”.\nreleased equals TRUE, so it only contains sets that have been released on the market.\n\nAnd finally, the column Price-to-part ratio is added, which is calculated from DE_retailPrice and pieces.\n\ndf_sets_18to24_filt &lt;- df_sets_18to24 %&gt;%\n  filter(is.na(pieces) == FALSE,\n         pieces &gt; 10,\n         is.na(DE_retailPrice) == FALSE,\n         theme != \"Duplo\",\n         subtheme != \"Duplo\",\n         category != \"Book\",\n         released == TRUE\n         ) %&gt;%\n  mutate(\"License\" = ifelse(themeGroup == \"Licensed\"|subtheme == \"Licensed\",\n                            \"Licensed\",\n                            \"No license\"),\n         \"Price-to-part ratio\" = DE_retailPrice/pieces)\n\nhead(df_sets_18to24_filt, n = 5)\n\n\n\nTable 2: First 5 rows of sets_18to24_filt.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsetID\nnumber\nname\nyear\ntheme\nthemeGroup\nsubtheme\ncategory\nreleased\npieces\nDE_retailPrice\nLicense\nPrice-to-part ratio\n\n\n\n\n27724\n10260\nDowntown Diner\n2018\nCreator Expert\nModel making\nModular Buildings Collection\nNormal\nTRUE\n2480\n149.99\nNo license\n0.0604798\n\n\n27828\n10261\nRoller Coaster\n2018\nCreator Expert\nModel making\nFairground Collection\nNormal\nTRUE\n4124\n329.99\nNo license\n0.0800170\n\n\n27829\n10262\nJames Bond Aston Martin DB5\n2018\nCreator Expert\nModel making\nVehicles\nNormal\nTRUE\n1290\n149.99\nNo license\n0.1162713\n\n\n27830\n10263\nWinter Village Fire Station\n2018\nCreator Expert\nModel making\nWinter Village Collection\nNormal\nTRUE\n1166\n87.72\nNo license\n0.0752316\n\n\n28316\n10268\nVestas Wind Turbine\n2018\nCreator Expert\nModel making\nVestas\nNormal\nTRUE\n826\n175.45\nNo license\n0.2124092\n\n\n\n\n\n\n\n\n\nThe column year is converted into type factor, instead of type double. This will turn it from a continuous variable into a categorical variable, and is necessary when using year as a grouping variable, or when creating plots with ggplot2. Also, the License column is turned into type factor, with the ordered levels “No license” and “License”.\n\ndf_sets_18to24_filt$year &lt;- factor(df_sets_18to24_filt$year)\ndf_sets_18to24_filt$License &lt;- factor(df_sets_18to24_filt$License, levels = c(\"No license\", \"Licensed\"))"
  },
  {
    "objectID": "data_science_experience/posts/LegoSetPrices.html#visually-exploring-the-data",
    "href": "data_science_experience/posts/LegoSetPrices.html#visually-exploring-the-data",
    "title": "Lego set prices",
    "section": "4 Visually exploring the data",
    "text": "4 Visually exploring the data\n\n4.1 Number of sets released each year\n\n\nShow code\ndf_release_yr &lt;- df_sets_18to24_filt %&gt;%\n  group_by(year, License) %&gt;%\n  summarise(\"n_sets\" = n()) %&gt;%\n  mutate(\"Total\" = sum(n_sets)) %&gt;%\n  pivot_wider(names_from = License, values_from = n_sets) %&gt;%\n  pivot_longer(cols = c(Licensed, `No license`, Total), names_to = \"License\", values_to = \"n_sets\")\n\ndf_release_yr$License &lt;- factor(df_release_yr$License, levels = c(\"No license\", \"Licensed\", \"Total\"))\n\nggplot(df_release_yr) +\n  geom_point(aes(x = year, y = n_sets, color = License, fill = License), pch = 21, size = 3) +\n  geom_line(aes(x = year, y = n_sets, color = License, group = License)) +\n  scale_x_discrete(name = \"Year\") +\n  scale_y_continuous(name = \"Number of sets\") +\n  coord_cartesian(ylim = c(0, 390)) +\n  scale_color_manual(values = c(\"#9a1917\", \"#d88c0f\", \"#000000\")) +\n  scale_fill_manual(values = c(\"#9a19174D\", \"#d88c0f4D\", \"#0000004D\")) +\n  theme_classic() +\n  theme(axis.title = element_text(size = 18),\n        axis.text = element_text(size = 16, color = \"black\"),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        legend.text = element_text(size = 14))\n\n\n\n\n\n\n\n\nFigure 1: Number of sets released from 2018 to 2024.\n\n\n\n\n\nIn Figure 1 you can see that the number of sets released each year is quite stable, with almost an equal number of licensed versus non-licensed sets being released. Interesting is the difference in 2020, where there is a drop in licensed sets, and an increase in the non-licensed ones. Not sure what has caused this difference here, but a good guess is thatt due to COVID-19 a lot of media releases (movies, tv series, …) have been postponed, which in turn could have resulted in the accompanying Lego sets not being released as well?\n\n\n4.2 Evolution of set sizes and retail prices from 2018 to 2024\n\n\nShow code\ndf_pieces_stats &lt;- df_sets_18to24_filt %&gt;%\n  group_by(year, License) %&gt;%\n  summarize(\"mean pieces\" = mean(pieces),\n            \"sd\" = sd(pieces))\n\nggplot(df_sets_18to24_filt) +\n  facet_grid(~year) +\n  geom_quasirandom(aes(x = License, y = pieces, color = License, fill = License), pch = 21, size = 3) +\n  geom_point(data = df_pieces_stats, aes(x = License, y = `mean pieces`), size = 3) +\n  scale_y_continuous(name = \"Pieces\", trans = \"log10\") +\n  scale_color_manual(values = c(\"#9a1917\", \"#d88c0f\")) +\n  scale_fill_manual(values = c(\"#9a19174D\", \"#d88c0f4D\")) +\n  theme_classic() +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 18),\n        axis.text.x = element_blank(),\n        axis.text.y = element_text(size = 16, color = \"black\"),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        legend.text = element_text(size = 14),\n        strip.text = element_text(size = 14, face = \"bold\"))\n\n\n\n\n\n\n\n\nFigure 2: Set piece count (axis in log scale) from 2018 to 2024.\n\n\n\n\n\nFigure 2 shows that there is no substantial difference in piece count between licensed and non-licensed sets. Interesting is that the mean piece count of Lego sets has been increasing over the years. In 2018, the mean piece count was 404/430 for non-licensed/licensed sets respectively. By 2024, this has increased to 737/627 for non-licensed/licensed. As a consequence, mean set prizes should have also increased during that time period.\n\n\nShow code\ndf_prices_stats &lt;- df_sets_18to24_filt %&gt;%\n  group_by(year, License) %&gt;%\n  summarize(\"mean retail price\" = mean(DE_retailPrice),\n            \"sd\" = sd(DE_retailPrice))\n\nggplot(df_sets_18to24_filt) +\n  facet_grid(~year) +\n  geom_quasirandom(aes(x = License, y = DE_retailPrice, color = License, fill = License), pch = 21, size = 3) +\n  geom_point(data = df_prices_stats, aes(x = License, y = `mean retail price`), size = 3) +\n  scale_y_continuous(name = \"Retail price (EUR)\", trans = \"log10\") +\n  scale_color_manual(values = c(\"#9a1917\", \"#d88c0f\")) +\n  scale_fill_manual(values = c(\"#9a19174D\", \"#d88c0f4D\")) +\n  theme_classic() +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 18),\n        axis.text.x = element_blank(),\n        axis.text.y = element_text(size = 16, color = \"black\"),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        legend.text = element_text(size = 14),\n        strip.text = element_text(size = 14, face = \"bold\"))\n\n\n\n\n\n\n\n\nFigure 3: Set retail prices (axis in log scale) from 2018 to 2024.\n\n\n\n\n\nAs expected, in Figure 3 the mean retail price for sets has increased from 38.6 Euro/45.3 Euro (non-licensed/licensed) in 2018 to 64.9 Euro/66.6 Euro (non-licensed/licensed). This corresponds to the increase in set piece count seen in Figure 2.\n\n\n4.3 Price-to-part ratio of sets over the years\nThe most simple way to take into account the effect of the set piece count on the retail price is to calculate the price-to-part ratio.\n\n\nShow code\ndf_ptp_stats &lt;- df_sets_18to24_filt %&gt;%\n  group_by(year) %&gt;%\n  mutate(\"mean PtP ratio - all\" = mean(mean(`Price-to-part ratio`))) %&gt;%\n  group_by(year, License) %&gt;%\n  summarize(\"mean PtP ratio\" = mean(`Price-to-part ratio`),\n            \"median PtP ratio\" = median(`Price-to-part ratio`),\n            \"sd\" = sd(`Price-to-part ratio`))\n\nggplot(df_sets_18to24_filt) +\n  facet_grid(~year) +\n  geom_quasirandom(aes(x = License, y = `Price-to-part ratio`, color = License, fill = License), dodge.width = 0.5, pch = 21, size = 3) +\n  geom_point(data = df_ptp_stats, aes(x = License, y = `mean PtP ratio`), size = 3) +\n  geom_errorbar(data = df_ptp_stats, aes(x = License, ymin = `mean PtP ratio` - sd, ymax = `mean PtP ratio` + sd), width = 0.2) +\n  scale_color_manual(values = c(\"#9a1917\", \"#d88c0f\")) +\n  scale_fill_manual(values = c(\"#9a19174D\", \"#d88c0f4D\")) +\n  theme_classic() +\n  theme(axis.title.x = element_blank(),\n        axis.title.y = element_text(size = 18),\n        axis.text.x = element_blank(),\n        axis.text.y = element_text(size = 16, color = \"black\"),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        legend.text = element_text(size = 14),\n        strip.text = element_text(size = 14, face = \"bold\"))\n\n\n\n\n\n\n\n\nFigure 4: Price-to-part ratio (in eurocent per piece) of licensed and non-licensed sets from 2018 to 2024.\n\n\n\n\n\nIn general, the price-to-part ratio for licensed sets is indeed slightly higher than those of non-licensed sets, with 2018 being the only exception (Figure 4). While most values clump together, there are some outliers with price-to-part ratios going as high as 1 Euro. Let’s take a closer look by filtering for sets with a price-to-part ratio higher than 0.5 Euro.\n\n\nShow code\ndf_high_ptp_sets &lt;- filter(df_sets_18to24_filt, `Price-to-part ratio` &gt; 0.5)\ndf_high_ptp_sets\n\n\n\n\nTable 3: Lego sets with a price-to-part ratio over 0.5 Euro per piece.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsetID\nnumber\nname\nyear\ntheme\nthemeGroup\nsubtheme\ncategory\nreleased\npieces\nDE_retailPrice\nLicense\nPrice-to-part ratio\n\n\n\n\n27918\n60205\nTracks\n2018\nCity\nModern day\nTrains\nNormal\nTRUE\n20\n19.99\nNo license\n0.9995000\n\n\n28133\n853840\nRoad Playmat\n2018\nXtra\nMiscellaneous\nPlaymats\nExtended\nTRUE\n11\n7.99\nNo license\n0.7263636\n\n\n28134\n853841\nSea Playmat\n2018\nXtra\nMiscellaneous\nPlaymats\nExtended\nTRUE\n11\n7.79\nNo license\n0.7081818\n\n\n28135\n853842\nPark Playmat\n2018\nXtra\nMiscellaneous\nPlaymats\nExtended\nTRUE\n11\n7.99\nNo license\n0.7263636\n\n\n29208\n45678\nSPIKE Prime Set\n2020\nEducation\nEducational\nSPIKE\nNormal\nTRUE\n528\n464.99\nNo license\n0.8806629\n\n\n30333\n71370\nFire Mario Power-Up Pack\n2020\nSuper Mario\nLicensed\nPower-Up Pack\nNormal\nTRUE\n11\n9.99\nLicensed\n0.9081818\n\n\n30334\n71371\nPropeller Mario Power-Up Pack\n2020\nSuper Mario\nLicensed\nPower-Up Pack\nNormal\nTRUE\n13\n9.99\nLicensed\n0.7684615\n\n\n30335\n71372\nCat Mario Power-Up Pack\n2020\nSuper Mario\nLicensed\nPower-Up Pack\nNormal\nTRUE\n11\n9.99\nLicensed\n0.9081818\n\n\n31814\n45345\nSPIKE Essential Set\n2021\nEducation\nEducational\nSPIKE\nNormal\nTRUE\n442\n354.99\nNo license\n0.8031448\n\n\n31343\n60296\nWheelie Stunt Bike\n2021\nCity\nModern day\nStuntz\nNormal\nTRUE\n14\n7.99\nNo license\n0.5707143\n\n\n31344\n60297\nDemolition Stunt Bike\n2021\nCity\nModern day\nStuntz\nNormal\nTRUE\n12\n7.99\nNo license\n0.6658333\n\n\n31345\n60298\nRocket Stunt Bike\n2021\nCity\nModern day\nStuntz\nNormal\nTRUE\n14\n7.99\nNo license\n0.5707143\n\n\n31463\n60309\nSelfie Stunt Bike\n2021\nCity\nModern day\nStuntz\nNormal\nTRUE\n14\n7.99\nNo license\n0.5707143\n\n\n31467\n60311\nFire Stunt Bike\n2021\nCity\nModern day\nStuntz\nNormal\nTRUE\n11\n7.99\nNo license\n0.7263636\n\n\n30798\n71384\nPenguin Mario Power-Up Pack\n2021\nSuper Mario\nLicensed\nPower-Up Pack\nNormal\nTRUE\n18\n9.99\nLicensed\n0.5550000\n\n\n30799\n71385\nTanooki Mario Power-Up Pack\n2021\nSuper Mario\nLicensed\nPower-Up Pack\nNormal\nTRUE\n13\n9.99\nLicensed\n0.7684615\n\n\n31315\n71392\nFrog Mario Power-Up Pack\n2021\nSuper Mario\nLicensed\nPower-Up Pack\nNormal\nTRUE\n11\n9.99\nLicensed\n0.9081818\n\n\n31316\n71393\nBee Mario Power-Up Pack\n2021\nSuper Mario\nLicensed\nPower-Up Pack\nNormal\nTRUE\n13\n9.99\nLicensed\n0.7684615\n\n\n33667\n60332\nReckless Scorpion Stunt Bike\n2022\nCity\nModern day\nStuntz\nNormal\nTRUE\n15\n7.99\nNo license\n0.5326667\n\n\n33668\n60333\nBathtub Stunt Bike\n2022\nCity\nModern day\nStuntz\nNormal\nTRUE\n14\n7.99\nNo license\n0.5707143\n\n\n34279\n60358\nCyber Stunt Bike\n2023\nCity\nModern day\nStuntz\nNormal\nTRUE\n13\n7.99\nNo license\n0.6146154\n\n\n\n\n\n\n\n\n\n\nsummary(df_high_ptp_sets$License)\n## No license   Licensed \n##         14          7\nsummary(factor(df_high_ptp_sets$subtheme))\n##      Playmats Power-Up Pack         SPIKE        Stuntz        Trains \n##             3             7             2             8             1\n\nInterestingly, Table 3 contains more non-licensed sets than licensed ones (which are thought to be more expensive). When looking at the subthemes, you can see that the table contains three playmat sets, and one train track extension. These are non-standard sets with non-standard pieces, explaining the high price-to-part ratios. The same reasoning can explain the high ratios for sets of the SPIKE educational theme (aimed at learning programming to kids, contains specialized parts such as motors, sensors, etc.) and the Lego City Stuntz theme (containing flywheel-powered stunt bikes). Finally, there is the Super Mario Power-Up Pack theme, an interactive playset that combines Super Mario gameplay with Lego bricks. As these sets are both licensed and contain specialized electronic parts, it is one of the most expensive in this list, with several sets reaching 0.9 Euro per brick.\nWhen doing a deeper analysis, it could be argued that playmats, train track extensions and educational sets with expensive electronic parts should be excluded when analyzing the pricing of more standard Lego sets. For now, I will keep in mind that 21 sets have very aberrant price-to-part ratios, but that this will probably have little impact on the total of 2526 sets in df_sets_18to24_filt.\nNext, let’s focus on how the mean price-to-part ratio (also shown als in Figure 4 as black dots) evolves over the years for both licensed and non-licensed sets:\n\n\nShow code\nggplot(df_ptp_stats) +\n  geom_line(aes(x = year, y = `mean PtP ratio`, color = License, group = License)) +\n  geom_point(aes(x = year, y = `mean PtP ratio`, color = License, fill = License), pch = 21, size = 2) +\n  scale_x_discrete(name = \"Year\") +\n  scale_y_continuous(name = \"Mean price-to-part ratio\") +\n  coord_cartesian(ylim = c(0, 0.15)) +\n  scale_color_manual(values = c(\"#9a1917\", \"#d88c0f\")) +\n  scale_fill_manual(values = c(\"#9a19174D\", \"#d88c0f4D\")) +\n  theme_classic() +\n  theme(axis.title = element_text(size = 18),\n        axis.text = element_text(size = 16, color = \"black\"),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        legend.text = element_text(size = 14))\n\n\n\n\n\n\n\n\nFigure 5: Evolution of the mean price-to-part ratio (in eurocent) from 2018 to 2024.\n\n\n\n\n\nIn Figure 5 you can see that - except for 2018 - licensed sets have always been more expensive than non-licensed sets, with the difference ranging from 1.1 cents (2021) to 1.6 cents (2023). Interesting is also that both licensed and non-licensed sets follow an identical trend over the years, meaning that price increases/decreases have affected all sets, not just licensed or non-licensed. It’s fair to assume that these changes are probably caused by economical factors (production costs, etc.), as this would indeed affect all sets. Prices started to rise in 2020 and peaked at 2021, and after that decreased and stabilized again. The cause of this bump is unknown, one explanation could be the effect of COVID-19 on the economy."
  },
  {
    "objectID": "data_science_experience/datsciexp.html",
    "href": "data_science_experience/datsciexp.html",
    "title": "Data science experience",
    "section": "",
    "text": "Lego set prices\n\n\n\n\n\n\n\n\n\n\n\nJul 21, 2024\n\n\nSven Van Bael\n\n\n\n\n\n\nNo matching items"
  }
]